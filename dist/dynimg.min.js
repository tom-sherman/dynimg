!function(n){function e(n,e,t){e.forEach(function(e){var o=e[0];e[1].forEach(function(e){t?o.removeEventListener(e,n):o.addEventListener(e,n)})})}n.dynimg={load:function(){},init:function(n,t,o){var i=["scroll","touchmove"],r=["orientationchange","resize"],c=Array.prototype.slice.call(n);void 0===o&&(o={});var s=!1,d=function(){c.length||e(d,[[document,i],[window,r]],!0),s||(s=!0,setTimeout(function(){c.forEach(function(n){n.getBoundingClientRect().top<=window.innerHeight&&n.getBoundingClientRect().bottom>=0&&"none"!==window.getComputedStyle(n).display&&t(n,o)}),s=!1},200))};if(c.length)if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){var f=new window.IntersectionObserver(function(n,e){n.forEach(function(n){(n.isIntersecting||n.intersectionRect.height>0)&&t(n.target,o,function(n){e.unobserve(n),c.splice(c.indexOf(n),1),0===c.length&&(e.disconnect(),console.log("Observer disconnected!"))})})});c.forEach(function(n){f.observe(n)})}else d(),e(d,[[document,i],[window,r]])}}}(this);